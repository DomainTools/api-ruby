# DomainTools Wrapper
Ruby gem for requesting domaintools.com [webservices](http://www.domaintools.com/api/).

## API Documentation
You can find [here](http://www.domaintools.com/api/docs/products/) the current list of services available with the DomainTools API

## How to use it


### Simple request example

    DomainTools::use(DOMAINTOOLS_USERNAME,DOMAINTOOLS_KEY)::as("json")
    request         = DomainTools.request
    request.domain  = "domaintools.com"
    response        = request.do
    @json_result    = response.to_s
    

### Exceptions handling and response browsing
    DomainTools::use(DOMAINTOOLS_USERNAME,DOMAINTOOLS_KEY)
    begin
      request             = DomainTools.request                          
      request.domain      = "domaintoolscom"
      request.service     = "whois"
      response            = request.do
      @raw_response       = response            # json printed by defaut
      @response_as_xml    = response.to_xml!    # parse and generate xml
      @debug              = response.to_yaml    # useful for debug
      @direct_browsing    = response["response"]["registration"]["registrar"]
      @name_servers       = response["response"]["name_servers"]
      @name_servers.each{|ns| puts ns}
    rescue DomainTools::ServiceException => e
      @error = "#{e.class}: #{request.error}" if request.error?
    end
    
### All inline request                 
    begin
      @raw_response = DomainTools::use(DOMAINTOOLS_USERNAME,DOMAINTOOLS_KEY)::get("wahois")::on("domaintools.com")["response"]["registrant"]
    rescue DomainTools::ServiceException => e
      # ... your error handling
    end
    # Check status afterwards
    @error = DomainTools.request.error? ? DomainTools.request.error : "No error"
    
*Numerous examples are available in the example file*